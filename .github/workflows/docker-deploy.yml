name: Docker Deploy

on:
  workflow_run:
    workflows: ["Docker Release"]
    types:
      - completed
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        type: choice
        options:
          - staging
          - prod
        default: staging
      image_tag:
        description: 'Docker image tag to deploy (defaults to latest commit SHA)'
        required: false
        type: string      

jobs:
  prepare-config:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success' && (github.event.workflow_run.head_branch == 'main' || github.event.workflow_run.head_branch == 'develop')) }}
    outputs:
      services_config: ${{ steps.build-config.outputs.services_config }}
    steps:
      - name: Build services configuration
        id: build-config
        env:
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          IMAGE_TAG: ${{ github.event.inputs.image_tag || github.event.workflow_run.head_sha || github.sha }}
          ENVIRONMENT: ${{ github.event.inputs.environment || (github.event.workflow_run.head_branch == 'main' && 'prod' || 'staging') }}
          FQDN: ${{ (github.event.inputs.environment == 'prod' || github.event.workflow_run.head_branch == 'main') && 'kleverlabs.dev' || 'staging.kleverlabs.dev' }}
        run: |
          # Build the services configuration JSON
          SERVICES_CONFIG=$(cat <<EOF
          [
            {
              "service_name": "kleverconnect-starter",
              "image": "gcr.io/${GCP_PROJECT_ID}/kleverconnect-starter:${IMAGE_TAG}",
              "replicas": 1,
              "port": 3000,
              "domain": "kleverconnect-starter",
              "fqdn": "${FQDN}",
              "environment_type": "${ENVIRONMENT}",
              "enable_retry": true,
              "enable_rate_limit": true,
              "rate_limit": {
                "average": 100,
                "burst": 50
              },
              "resources": {
                "limits": { "cpus": "0.5", "memory": "256M" }
              },
              "volume_persistence": false,
              "enable_logging": true
            }
          ]
          EOF
          )
          
          # Set output using heredoc syntax for multiline content
          echo "services_config<<EOF" >> $GITHUB_OUTPUT
          echo "$SERVICES_CONFIG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  deploy-swarm:
    needs: prepare-config
    uses: klever-labs/workflows/.github/workflows/deploy-swarm.yml@main
    with:
      repository_name: kleverconnect-starter
      services_config: ${{ needs.prepare-config.outputs.services_config }}
    secrets:
      portainer_url: ${{ secrets.PORTAINER_URL }}
      portainer_api_token: ${{ secrets.PORTAINER_API_TOKEN }}
      twingate_sa: ${{ secrets.TWINGATE_SERVICE_ACCOUNT }}